using System;
using System.IO;
using System.Runtime.Remoting.Activation;
using System.Threading;
using PSOLib;

public class RC35_ActivePowerLoss: Problem
{
    private double[] VR = new double[38]; //只會在class內使用，因此可以用private即可，就不會被其他class讀取
    public double[] VI = new double[38];
    public double[] Pdg = new double[38];
    public double[] Qdg = new double[38];
    public double[] Psp = new double[38];
    public double[] Qsp = new double[38];
    public double[] IR = new double[38];
    public double[] II = new double[38];

    public double[] spIR = new double[38];
    public double[] spII = new double[38];
    public double[] delIR = new double[38];
    public double[] delII = new double[38];
    public double[] delP = new double[38];
    public double[] delQ = new double[38];
    public double[,] YR = new double[38, 38];
    public double[,] YI = new double[38, 38];
    public double[,] G = new double[38, 38]
    {
            {1382.0502, -1382.0502, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {-1382.0502, 2153.4412, -258.61351, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -512.7775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, -258.61351, 849.62936, -348.37709, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -242.63876, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, },
            {0.0, 0.0, -348.37709, 682.94125, -334.56416, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, -334.56416, 446.92964, -112.36548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, -112.36548, 812.10505, -71.643816, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -628.09576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, -71.643816, 275.15172, -203.50791, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -203.50791, 345.59691, -101.93804, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -101.93804, 244.47234, -102.38333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -102.38333, 838.75637, -736.37304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -736.37304, 1123.0683, -386.69529, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -386.69529, 494.41585, -67.569593, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -67.569593, 176.08089, -108.5113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -108.5113, 260.15116, -151.63986, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -151.63986, 291.97391, -140.33405, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -140.33405, 185.10967, -44.77562, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -44.77562, 180.63725, -135.86163, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -135.86163, 296.4784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677, 0.0 },
            {0.0, -512.7775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 571.69963, -58.92213, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -58.92213, 224.75485, -165.83272, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -165.83272, 248.27223, -82.439504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -82.439504, 82.439504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, -242.63876, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 352.7984, -110.15965, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -110.15965, 221.32346, -111.16381, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -111.16381, 271.78058, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677 },
            {0.0, 0.0, 0.0, 0.0, 0.0, -628.09576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1076.799, -448.70321, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -448.70321, 534.02551, -85.322298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -85.322298, 198.8672, -113.5449, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -113.5449, 364.7832, -251.2383, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -251.2383, 334.62145, -83.383149, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -83.383149, 302.73072, -219.34757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -219.34757, 357.17133, -137.82376, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -137.82376, 137.82376, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677 }
    };
    public double[,] B = new double[38, 38]
    {
            {-705.47162, 705.47162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {705.47162, -1326.394, 131.74969, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 489.17266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 131.74969, -475.07259, 177.47512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 165.84778, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 177.47512, -347.92943, 170.45431, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 170.45431, -267.44114, 96.986834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 96.986834, -654.96629, 237.96864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 320.01081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 237.96864, -305.22272, 67.25408, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 67.25408, -181.62853, 74.223486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 74.223486, -186.94519, 72.570741, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 72.570741, -316.22358, 243.65284, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 243.65284, -371.55592, 127.90308, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 127.90308, -221.21677, 53.16273, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.16273, -196.0102, 142.84747, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 142.84747, -277.7987, 134.95124, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 134.95124, -237.44613, 102.49489, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 102.49489, -162.27754, 59.78265, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 59.78265, -166.3139, 106.53125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 106.53125, -267.14802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677, 0.0 },
            {0.0, 489.17266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -542.26926, 53.096603, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.096603, -246.82824, 193.73164, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 193.73164, -302.72959, 108.99795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 108.99795, -108.99795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 165.84778, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -252.82111, 86.973328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 86.973328, -173.96763, 86.994299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 86.994299, -247.61107, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 320.01081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -548.41849, 228.40768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 228.40768, -303.63726, 75.229578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 75.229578, -174.14766, 98.918085, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 98.918085, -226.92241, 128.00433, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 128.00433, -210.41167, 82.407344, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 82.407344, -338.06698, 255.65963, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 255.65963, -469.95838, 214.29874, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 214.29874, -214.29874, 0.0, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.150968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -40.150968, 0.0, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677, 0.0 },
            {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.61677, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -160.61677 }
    };
    public double[,] P = new double[38, 6]
    {
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {0.1, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.12, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.2, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.2, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.045, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.12, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.09, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.42, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.42, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 0.18 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.12, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.2, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {0.15, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.21, -0.0, -0.0, -0.0, 1.0, 0.92 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 1.51 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 }
    };
    public double[,] Q = new double[38, 6]
    {
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {0.06, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.08, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.03, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.1, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.1, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.03, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.035, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.035, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.08, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.01, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.05, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.2, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.2, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.025, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.025, -0.0, -0.0, -0.0, 1.0, 6.0 },
            {0.02, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.07, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.6, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {0.07, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.1, -0.0, -0.0, -0.0, 1.0, 4.04 },
            {0.04, -0.0, -0.0, -0.0, 1.0, 3.4 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 },
            {-0.0, -0.0, -0.0, -0.0, 1.0, -0.0 }
    };

    public override String name()
	{
		return "RC35_ActivePowerLoss";
    }

    int dims = 153;
    public RC35_ActivePowerLoss() //constructor
    {
		//xmin35   = -1*ones(1,par.n);
		//xmax35   = +1*ones(1,par.n);
		
		double[] x_l = new double[dims];
		double[] x_u = new double[dims];
		for(int i=0; i<dims; i++) {
			x_l[i] = -1.0;
			x_u[i] = 1.0;
		}		
		setDims(x_u, x_l);
    }


	public override double GetFitness(PSOTuple pi)
	{
        
        for(int i=1; i < 38; i++)
        {
            this.VR[i] = pi.X[i - 1];
            this.VI[i] = pi.X[i + 36];                
            this.Psp[i] = pi.X[i + 73];
            this.Qsp[i] = pi.X[i + 110];
        }
        
        this.VR[0] = 1.0;
        this.VI[0] = 0.0;
        this.Pdg[0] = 0.0;
        this.Psp[0] = 0.0;
        this.Qsp[0] = 0.0;
        
        this.Pdg[33] = pi.X[148];
        this.Pdg[34] = pi.X[149];
        this.Pdg[35] = pi.X[150];
        this.Pdg[36] = pi.X[151];
        this.Pdg[37] = pi.X[152];
        
        
        for (int i = 0; i < 33; i++)
        {
            this.Pdg[i] = 0.0;
        }

        for (int i = 0; i < 38; i++)
        {
            for (int j = 0; j < 38; j++)
            {
                this.YR[i, j] = this.G[i, j];
                this.YI[i, j] = this.B[i, j];
            }
        }
        
        for (int i = 0; i < 38; i++)
        {
            double numR = 0.0;
            for (int j = 0; j < 38; j++)
            {
                numR += this.YR[i, j] * this.VR[j] - this.YI[i, j] * this.VI[j];
            }
            this.IR[i] = numR;

            double numI = 0.0;
            for (int j = 0; j < 38; j++)
            {
                numI += this.YR[i, j] * this.VI[j] + this.YI[i, j] * this.VR[j];
            }
            this.II[i] = numI;
        }

        double sum_Psp = 0.0;
        for(int i = 1; i < 38;i++) 
        {
            sum_Psp += this.Psp[i];
        }

        for (int i = 0; i < 38; i++)
        {
            this.spIR[i] = (this.Psp[i] * this.VR[i] + this.Qsp[i] * this.VI[i]) / (Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2));
            this.spII[i] = -1 * ((this.Qsp[i] * this.VR[i] - this.Psp[i] * this.VI[i]) / (Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2)));
        }

        return this.VR[0] * this.IR[0] + this.VI[0] * this.II[0] + sum_Psp;
	}

	public override bool CheckParticle(PSOTuple pi) 
	{
        for (int i = 1; i < 38; i++)
        {
            this.VR[i] = pi.X[i - 1];
            this.VI[i] = pi.X[i + 36];
            this.Psp[i] = pi.X[i + 73];
            this.Qsp[i] = pi.X[i + 110];
        }

        this.Pdg[33] = pi.X[148];
        this.Pdg[34] = pi.X[149];
        this.Pdg[35] = pi.X[150];
        this.Pdg[36] = pi.X[151];
        this.Pdg[37] = pi.X[152];

        
        for (int i = 0; i < 33; i++)
        {
            this.Pdg[i] = 0.0;
        }
        

        for (int i = 0; i < 38; i++)
        {
            for (int j = 0; j < 38; j++)
            {
                this.YR[i, j] = this.G[i, j];
                this.YI[i, j] = this.B[i, j];
            }
        }

        for (int i = 0; i < 38; i++)
        {
            double numR = 0.0;
            for (int j = 0; j < 38; j++)
            {
                numR += this.YR[i, j] * this.VR[j] - this.YI[i, j] * this.VI[j];
            }
            this.IR[i] = numR;

            double numI = 0.0;
            for (int j = 0; j < 38; j++)
            {
                numI += this.YR[i, j] * this.VI[j] + this.YI[i, j] * this.VR[j];
            }
            this.II[i] = numI;
        }


        for (int i = 0; i < 38; i++)
        {
            this.spIR[i] = (this.Psp[i] * this.VR[i] + this.Qsp[i] * this.VI[i]) / (Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2));
            this.spII[i] = -1 * ((this.Qsp[i] * this.VR[i] - this.Psp[i] * this.VI[i]) / (Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2)));
        }

        for (int i = 1; i < 38; i++)
        {
            this.delP[i] = this.Psp[i] - this.Pdg[i] + (this.P[i, 1] * (Math.Pow(Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2), 0.5) / (Math.Pow(this.P[i, 4], this.P[i, 5]))));
            this.delQ[i] = this.Qsp[i] + (this.Q[i, 1] * (Math.Pow(Math.Pow(this.VR[i], 2) + Math.Pow(this.VI[i], 2), 0.5) / (Math.Pow(this.Q[i, 4], this.Q[i, 5]))));
            this.delIR[i] = this.IR[i] - this.spIR[i];
            this.delII[i] = this.II[i] - this.spII[i];
        }

        for (int i = 1; i < 38; i++)
        {
            double LEVEL = 10000.0;
            if (this.delIR[i] > LEVEL || this.delIR[i] < -1 * LEVEL) return false;
            if (this.delII[i] > LEVEL || this.delII[i] < -1 * LEVEL) return false;
            if (this.delP[i] > LEVEL || this.delP[i] < -1 * LEVEL) return false;
            if (this.delQ[i] > LEVEL || this.delQ[i] < -1 * LEVEL) return false;
        }
				
		//符合就return 0,不合就return 1 
		return true;
	}

};
